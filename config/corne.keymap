/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        shiftnCaps: shiftnCaps {
            compatible = "zmk,behavior-tap-dance";
            label = "Turns caps on on twice";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPSLOCK>;
        };
    };

    macros {
        n_tilde: n_tilde {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_1>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_press>;

            label = "N_TILDE";
        };

        // Macro para 'Á'
        // Macro para 'é'
        // Macro para 'É'
        // Macro para 'í'
        // Macro para 'Í'
        // Macro para 'ó'
        // Macro para 'Ó'
        // Macro para 'ú'
        // Macro para 'Ú'
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | GRAVE  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E       &kp R  &kp T        &kp Y      &kp U     &kp I         &kp O      &kp P       &kp BSPC
&kp LCTRL       &kp A  &kp S  &kp D       &kp F  &kp G        &kp H      &kp J     &kp K         &kp L      &kp SEMI    &kp APOS
&sk LEFT_SHIFT  &kp Z  &kp X  &kp C       &kp V  &kp B        &kp N      &n_tilde  &kp M         &kp COMMA  &kp PERIOD  &kp SLASH
                              &lt 3 LGUI  &mo 1  &kp SPACE    &kp SPACE  &mo 2     &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |   START   |  END    |
            // | CLOCK | CTRLZ | SS | FMT | F4  | F3 |  |     |      |  K_MUTE   |  K_VOL_DN   |  K_VOL_UP  |  ESC  |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB              &kp N1         &kp N2         &kp N3  &kp N4  &kp N5       &kp N6    &kp N7    &kp N8      &kp N9        &kp N0        &kp BSPC
&trans               &kp LC(COMMA)  &kp LA(LS(F))  &kp F3  &kp F4  &kp F5       &kp LEFT  &kp DOWN  &kp UP      &kp RIGHT     &kp HOME      &kp END
&mt LSHIFT CAPSLOCK  &trans         &trans         &trans  &trans  &trans       &n_tilde  &trans    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp ESC
                                                   &trans  &trans  &kp ENTER    &kp RET   &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPCDEL |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |  F5  |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &trans
&kp LCTRL  &trans    &trans  &trans    &trans     &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans     &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &trans    &kp LC(X)  &kp SPACE    &kp RET    &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &kp DELETE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp C_PLAY_PAUSE>;
        };

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <38 27>;
            layers = <2>;
        };

        Paste {
            bindings = <&kp LS(V)>;
            key-positions = <38 28>;
            layers = <2>;
        };

        Cut {
            bindings = <&kp LS(X)>;
            key-positions = <38 26>;
            layers = <2>;
        };

        Undo {
            bindings = <&kp LC(Z)>;
            key-positions = <38 25>;
            layers = <2>;
        };

        Redo {
            bindings = <&kp LC(Y)>;
            key-positions = <38 6>;
            layers = <2>;
        };
    };
};
